{"title":"Neuroglancer","markdown":{"yaml":{"title":"Neuroglancer","format":{"html":{"toc":true}},"bibliography":"references.bib"},"headingText":"Interface Basics","containsRefs":false,"markdown":"\n\n:::{.callout-note}\nNeuroglancer works best in Chrome and Firefox, and does not always work as expected in Safari.\n:::\n\n![Neuroglancer can show multiple layers of data, including imagery, segmentation, and more.](img/neuroglancer.png)\n\n[Neuroglancer](https://github.com/google/neuroglancer) is a WebGL-based viewer developed by Jeremy Maitin-Shephard at the Google Connectomics team to visualize very large volumetric data, designed in large part for connectomics.\nWe often use Neuroglancer to quickly explore data, visualize results in context, and share data.\n\nTo look at the MICrONS data in Neuroglancer, [click this link](https://neuroglancer.neuvue.io/#!%7B%22jsonStateServer%22:%22https://global.daf-apis.com/nglstate/api/v1/post%22,%22navigation%22:%7B%22pose%22:%7B%22position%22:%7B%22voxelSize%22:%5B4.0,4.0,40.0%5D%7D%7D,%22zoomFactor%22:2.0%7D,%22showSlices%22:false,%22layout%22:%22xy-3d%22,%22perspectiveZoom%22:2000.0,%22layers%22:%5B%7B%22type%22:%22image%22,%22source%22:%22precomputed://https://bossdb-open-data.s3.amazonaws.com/iarpa_microns/minnie/minnie65/em%22,%22name%22:%22img%22,%22shader%22:%22#uicontrol%20float%20black%20slider(min=0,%20max=1,%20default=0.0)%5Cn#uicontrol%20float%20white%20slider(min=0,%20max=1,%20default=1.0)%5Cnfloat%20rescale(float%20value)%20%7B%5Cn%20%20return%20(value%20-%20black)%20/%20(white%20-%20black);%5Cn%7D%5Cnvoid%20main()%20%7B%5Cn%20%20float%20val%20=%20toNormalized(getDataValue());%5Cn%20%20if%20(val%20%3C%20black)%20%7B%5Cn%20%20%20%20emitRGB(vec3(0,0,0));%5Cn%20%20%7D%20else%20if%20(val%20%3E%20white)%20%7B%5Cn%20%20%20%20emitRGB(vec3(1.0,%201.0,%201.0));%5Cn%20%20%7D%20else%20%7B%5Cn%20%20%20%20emitGrayscale(rescale(val));%5Cn%20%20%7D%5Cn%7D%5Cn%22%7D,%7B%22type%22:%22segmentation_with_graph%22,%22source%22:%22graphene://https://minnie.microns-daf.com/segmentation/table/minnie65_public%22,%22name%22:%22seg%22,%22selectedAlpha%22:0.3,%22objectAlpha%22:1.0,%22notSelectedAlpha%22:0.0%7D,%7B%22type%22:%22annotation%22,%22filterBySegmentation%22:false,%22bracketShortcutsShowSegmentation%22:true,%22annotationSelectionShowsSegmentation%22:true,%22name%22:%22ann%22%7D%5D,%22selectedLayer%22:%7B%22layer%22:%22ann%22,%22visible%22:true%7D%7D).\nNote that you will need to authenticate with the same Google-associated account that you use to set up CAVEclient.\n\nThe Neuroglancer interface is divided into panels.\nIn the default view, one panel shows the imagery in the X/Y plane (left), one shows a 3d view centered at the same location, and the narrow third panel provides information about the specific layer.\nNote that at the center of the each panel is a collection of axis-aligned red, blue and, green lines. The intersection and direction of each of these lines is consistent across all panels.\n\nAlong the top left of the view, you can see tabs with different names.\nNeuroglancer organizes data into *layers*, where each layer tells Neuroglancer about a different aspect of the data.\nThe default view has three layers:\n\n* `img` describes how to render imagery.\n* `seg` describes how to render segmentation and meshes.\n* `ann` is a manual annotation layer, allowing the user to add annotations to the data.\n\nYou can switch between layers by *right clicking* on the layer tab.\nYou will see the panel at the right change to provide controls for each layer as you click it.\n\nThe collection of all layers, the user view, and all annotations is stored as a JSON object called the **state**.\n\nThe basic controls for navigation are:\n\n* `single click/drag` slides the imagery in X/Y and rotates the 3d view.\n* `scroll wheel up/down` moves the imagery in Z.\n* `right click` jumps the 3d view to the clicked location in either the imagery or on a segmented object.\n* `double click` selects a segmentation and loads its mesh into the 3d view. Double clicking on a selected neuron deselects it.\n* `control-scrool` zooms the view under the cursor in or out.\n* `z` snaps the view to the closest right angle.\n\nYou can paste a position into Neuroglancer by clicking the x, y, z coordinate in the upper left corner and pasting a space or comma-separated list of numbers and hitting enter.\nNote that Neuroglancer always works in voxel units, and you can see the resolution of the voxels in the extreme upper left corner.\n\n## Selecting objects\n\nThe most direct way to select a neuron is to double click in the imagery to select the object under your cursor.\nThis will load all the voxels associated with that object and also display its mesh in the 3d view.\n\nTo see the list of selected objects, you can select the segmentation tab (right click on the `seg` tab).\nUnderneath the list of options, there is a list of selected root ids and the color assigned to them in the view.\nYou can change colors of all neurons randomly by pressing `l` or individually change colors as desired.\nIn addition, you can press the checkbox to hide a selected object while keeping it in the list, or deselect it by clicking on the number itself.\nYou can also copy a root id by pressing the clipboard icon next to its number, or copy all selected root ids by pressing the clipboard icon above the list.\n\nThis selection list also allows you to select objects by pasting one or more root ids into the text box at the top of the list and pressing enter.\n\n## Annotations\n\nAnnotations are stored in an annotation layer.\nThe default state has an annotation layer called `ann`, but you can always add new annotation layers by command-clicking the `+` button to the right of the layer tabs.\n\nTo create an annotation, select the layer (right click on the tab), and then click the icon representing the type of annotation you want to use.\nThe most basic annotation is a point, which is the icon to the left of the list.\nThe icon will change to having a green background when selected.\n\nNow if you **control-click** in either the imagery or the 3d view, you will create a point annotation at the clicked location.\nThe annotation will appear in the list to the right, with its coordinate (in voxels, not nanometers) displayed.\nClicking any annotation in the list will jump to that annotation in 3d space.\nEach annotation layer can have one color, which you can change with the color picker to the left of the annotation list.\n\n## Navigating Annotations\nAnnotations in an annotation layer can be right-clicked on to jump to them, but can also be navigated as a list.\n\n::: {.panel-tabset}\n\n## spelunker\nTo see the list of annotations, select the annotation layer (right click on the tab).\n\nEach annotation is listed as its location in Neuroglancer voxel coordinates.\n\nClicking on an row in this annotation list will not only jump to it in the view, but also select it.\nYou can see the information about the selected neuron in the lower right corner.\n\n## neuroglancer.neuvue\nTo see the list of annotations, select the annotation layer (right click on the tab).\n\nEach annotation is listed as its location in Neuroglancer voxel coordinates.\n\nClicking on an row in this annotation list will not only jump to it in the view, but also select it.\nYou can see the information about the selected neuron in the lower right corner.\n\n::: {.callout-important}\nThe following sections are not accurate for spelunker version of neuroglancer, but do represent planned feature addtions.\n:::\n\nOnce an annotation is selected, any associated root ids are loaded.\nThe keys `[` and `]` will jump to the previous and next annotations in the list, respectively.\n\nEach annotation can have a full-text description associated with it for adding notes.\nThis can be added in the lower right corner.\n\n![Annotation tags after populating them manually.](img/neuroglancer_tags.png)\n\nHowever, the most convenient way to label data quickly is through Tags.\n\nTo add tags, click on the `Shortcuts` tab within the Annotation widget on the right, and then click on the `+` button to add a new tag.\n\nEach tag gets a text label and a key command to activate or deactivate it for a given annotation.\n\nBy default, the first tag is activated by pressing `shift-q`, the second by pressing `shift-w`, and so on down the qwerty line.\n\n![Annotation tags applied to annotations. The labels with with the `#` symbol indicate a tag is present.](img/neuroglancer_tags_example.png)\n\nNow when you select an annotation, you can press the key command to attach that tag to it.\n\nPressing the same key command will remove the tag.\n\nAny number of tags can be added to each annotation.\n\nTogether with the `[` and `]` keys to navigate the list, this allows you to quickly label a large number of annotations.\n\n## ngl.microns-explorer\nTo see the list of annotations, select the annotation layer (right click on the tab).\n\nEach annotation is listed as its location in Neuroglancer voxel coordinates.\n\nClicking on an row in this annotation list will not only jump to it in the view, but also select it.\nYou can see the information about the selected neuron in the lower right corner.\n\n:::\n\n## Saving and sharing states\n\nLike many other websites that require logins, you cannot simply send your URL ot another person to have them see the view.\nInstead, to save the current state and make it available to yourself or others in the future, you need to save the state with the `Share` button at the top right corner.\nThis will then give you a URL that you can copy and share with others or paste yourself.\nA typical sharing URL looks like the following:\n```\nhttps://neuroglancer.neuvue.io/?json_url=https://global.daf-apis.com/nglstate/api/v1/4684616269037568\n```\nThe first part is the URL for the Neuroglancer viewer, while the part after the `?json_url=` is a URL that points to a JSON file that contains the state.\nThe number at the end of the URL is used to uniquely identify the state and can be used programatically to retrieve information.\n\n::: {.callout-warning}\nIf a URL contains `?local_id=` instead of `?json_url`, that means that it cannot be viewed by anyone else or even in another browser on your own computer.\n:::\n\n\n","srcMarkdownNoYaml":"\n\n:::{.callout-note}\nNeuroglancer works best in Chrome and Firefox, and does not always work as expected in Safari.\n:::\n\n![Neuroglancer can show multiple layers of data, including imagery, segmentation, and more.](img/neuroglancer.png)\n\n[Neuroglancer](https://github.com/google/neuroglancer) is a WebGL-based viewer developed by Jeremy Maitin-Shephard at the Google Connectomics team to visualize very large volumetric data, designed in large part for connectomics.\nWe often use Neuroglancer to quickly explore data, visualize results in context, and share data.\n\nTo look at the MICrONS data in Neuroglancer, [click this link](https://neuroglancer.neuvue.io/#!%7B%22jsonStateServer%22:%22https://global.daf-apis.com/nglstate/api/v1/post%22,%22navigation%22:%7B%22pose%22:%7B%22position%22:%7B%22voxelSize%22:%5B4.0,4.0,40.0%5D%7D%7D,%22zoomFactor%22:2.0%7D,%22showSlices%22:false,%22layout%22:%22xy-3d%22,%22perspectiveZoom%22:2000.0,%22layers%22:%5B%7B%22type%22:%22image%22,%22source%22:%22precomputed://https://bossdb-open-data.s3.amazonaws.com/iarpa_microns/minnie/minnie65/em%22,%22name%22:%22img%22,%22shader%22:%22#uicontrol%20float%20black%20slider(min=0,%20max=1,%20default=0.0)%5Cn#uicontrol%20float%20white%20slider(min=0,%20max=1,%20default=1.0)%5Cnfloat%20rescale(float%20value)%20%7B%5Cn%20%20return%20(value%20-%20black)%20/%20(white%20-%20black);%5Cn%7D%5Cnvoid%20main()%20%7B%5Cn%20%20float%20val%20=%20toNormalized(getDataValue());%5Cn%20%20if%20(val%20%3C%20black)%20%7B%5Cn%20%20%20%20emitRGB(vec3(0,0,0));%5Cn%20%20%7D%20else%20if%20(val%20%3E%20white)%20%7B%5Cn%20%20%20%20emitRGB(vec3(1.0,%201.0,%201.0));%5Cn%20%20%7D%20else%20%7B%5Cn%20%20%20%20emitGrayscale(rescale(val));%5Cn%20%20%7D%5Cn%7D%5Cn%22%7D,%7B%22type%22:%22segmentation_with_graph%22,%22source%22:%22graphene://https://minnie.microns-daf.com/segmentation/table/minnie65_public%22,%22name%22:%22seg%22,%22selectedAlpha%22:0.3,%22objectAlpha%22:1.0,%22notSelectedAlpha%22:0.0%7D,%7B%22type%22:%22annotation%22,%22filterBySegmentation%22:false,%22bracketShortcutsShowSegmentation%22:true,%22annotationSelectionShowsSegmentation%22:true,%22name%22:%22ann%22%7D%5D,%22selectedLayer%22:%7B%22layer%22:%22ann%22,%22visible%22:true%7D%7D).\nNote that you will need to authenticate with the same Google-associated account that you use to set up CAVEclient.\n\n## Interface Basics\nThe Neuroglancer interface is divided into panels.\nIn the default view, one panel shows the imagery in the X/Y plane (left), one shows a 3d view centered at the same location, and the narrow third panel provides information about the specific layer.\nNote that at the center of the each panel is a collection of axis-aligned red, blue and, green lines. The intersection and direction of each of these lines is consistent across all panels.\n\nAlong the top left of the view, you can see tabs with different names.\nNeuroglancer organizes data into *layers*, where each layer tells Neuroglancer about a different aspect of the data.\nThe default view has three layers:\n\n* `img` describes how to render imagery.\n* `seg` describes how to render segmentation and meshes.\n* `ann` is a manual annotation layer, allowing the user to add annotations to the data.\n\nYou can switch between layers by *right clicking* on the layer tab.\nYou will see the panel at the right change to provide controls for each layer as you click it.\n\nThe collection of all layers, the user view, and all annotations is stored as a JSON object called the **state**.\n\nThe basic controls for navigation are:\n\n* `single click/drag` slides the imagery in X/Y and rotates the 3d view.\n* `scroll wheel up/down` moves the imagery in Z.\n* `right click` jumps the 3d view to the clicked location in either the imagery or on a segmented object.\n* `double click` selects a segmentation and loads its mesh into the 3d view. Double clicking on a selected neuron deselects it.\n* `control-scrool` zooms the view under the cursor in or out.\n* `z` snaps the view to the closest right angle.\n\nYou can paste a position into Neuroglancer by clicking the x, y, z coordinate in the upper left corner and pasting a space or comma-separated list of numbers and hitting enter.\nNote that Neuroglancer always works in voxel units, and you can see the resolution of the voxels in the extreme upper left corner.\n\n## Selecting objects\n\nThe most direct way to select a neuron is to double click in the imagery to select the object under your cursor.\nThis will load all the voxels associated with that object and also display its mesh in the 3d view.\n\nTo see the list of selected objects, you can select the segmentation tab (right click on the `seg` tab).\nUnderneath the list of options, there is a list of selected root ids and the color assigned to them in the view.\nYou can change colors of all neurons randomly by pressing `l` or individually change colors as desired.\nIn addition, you can press the checkbox to hide a selected object while keeping it in the list, or deselect it by clicking on the number itself.\nYou can also copy a root id by pressing the clipboard icon next to its number, or copy all selected root ids by pressing the clipboard icon above the list.\n\nThis selection list also allows you to select objects by pasting one or more root ids into the text box at the top of the list and pressing enter.\n\n## Annotations\n\nAnnotations are stored in an annotation layer.\nThe default state has an annotation layer called `ann`, but you can always add new annotation layers by command-clicking the `+` button to the right of the layer tabs.\n\nTo create an annotation, select the layer (right click on the tab), and then click the icon representing the type of annotation you want to use.\nThe most basic annotation is a point, which is the icon to the left of the list.\nThe icon will change to having a green background when selected.\n\nNow if you **control-click** in either the imagery or the 3d view, you will create a point annotation at the clicked location.\nThe annotation will appear in the list to the right, with its coordinate (in voxels, not nanometers) displayed.\nClicking any annotation in the list will jump to that annotation in 3d space.\nEach annotation layer can have one color, which you can change with the color picker to the left of the annotation list.\n\n## Navigating Annotations\nAnnotations in an annotation layer can be right-clicked on to jump to them, but can also be navigated as a list.\n\n::: {.panel-tabset}\n\n## spelunker\nTo see the list of annotations, select the annotation layer (right click on the tab).\n\nEach annotation is listed as its location in Neuroglancer voxel coordinates.\n\nClicking on an row in this annotation list will not only jump to it in the view, but also select it.\nYou can see the information about the selected neuron in the lower right corner.\n\n## neuroglancer.neuvue\nTo see the list of annotations, select the annotation layer (right click on the tab).\n\nEach annotation is listed as its location in Neuroglancer voxel coordinates.\n\nClicking on an row in this annotation list will not only jump to it in the view, but also select it.\nYou can see the information about the selected neuron in the lower right corner.\n\n::: {.callout-important}\nThe following sections are not accurate for spelunker version of neuroglancer, but do represent planned feature addtions.\n:::\n\nOnce an annotation is selected, any associated root ids are loaded.\nThe keys `[` and `]` will jump to the previous and next annotations in the list, respectively.\n\nEach annotation can have a full-text description associated with it for adding notes.\nThis can be added in the lower right corner.\n\n![Annotation tags after populating them manually.](img/neuroglancer_tags.png)\n\nHowever, the most convenient way to label data quickly is through Tags.\n\nTo add tags, click on the `Shortcuts` tab within the Annotation widget on the right, and then click on the `+` button to add a new tag.\n\nEach tag gets a text label and a key command to activate or deactivate it for a given annotation.\n\nBy default, the first tag is activated by pressing `shift-q`, the second by pressing `shift-w`, and so on down the qwerty line.\n\n![Annotation tags applied to annotations. The labels with with the `#` symbol indicate a tag is present.](img/neuroglancer_tags_example.png)\n\nNow when you select an annotation, you can press the key command to attach that tag to it.\n\nPressing the same key command will remove the tag.\n\nAny number of tags can be added to each annotation.\n\nTogether with the `[` and `]` keys to navigate the list, this allows you to quickly label a large number of annotations.\n\n## ngl.microns-explorer\nTo see the list of annotations, select the annotation layer (right click on the tab).\n\nEach annotation is listed as its location in Neuroglancer voxel coordinates.\n\nClicking on an row in this annotation list will not only jump to it in the view, but also select it.\nYou can see the information about the selected neuron in the lower right corner.\n\n:::\n\n## Saving and sharing states\n\nLike many other websites that require logins, you cannot simply send your URL ot another person to have them see the view.\nInstead, to save the current state and make it available to yourself or others in the future, you need to save the state with the `Share` button at the top right corner.\nThis will then give you a URL that you can copy and share with others or paste yourself.\nA typical sharing URL looks like the following:\n```\nhttps://neuroglancer.neuvue.io/?json_url=https://global.daf-apis.com/nglstate/api/v1/4684616269037568\n```\nThe first part is the URL for the Neuroglancer viewer, while the part after the `?json_url=` is a URL that points to a JSON file that contains the state.\nThe number at the end of the URL is used to uniquely identify the state and can be used programatically to retrieve information.\n\n::: {.callout-warning}\nIf a URL contains `?local_id=` instead of `?json_url`, that means that it cannot be viewed by anyone else or even in another browser on your own computer.\n:::\n\n\n"},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":false,"echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":false,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"ipynb-shell-interactivity":null,"plotly-connected":true,"engine":"jupyter"},"render":{"keep-tex":false,"keep-typ":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-min-runs":1,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","css":["styles.css"],"toc":true,"output-file":"em_04_neuroglancer.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","other-links-title":"Other Links","code-links-title":"Code Links","launch-dev-container-title":"Launch Dev Container","launch-binder-title":"Launch Binder","article-notebook-label":"Article Notebook","notebook-preview-download":"Download Notebook","notebook-preview-download-src":"Download Source","notebook-preview-back":"Back to Article","manuscript-meca-bundle":"MECA Bundle","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","title-block-keywords":"Keywords","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","tools-share":"Share","tools-download":"Download","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-text-placeholder":"","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-wordcount":"Word Count","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items","listing-page-words":"{0} words"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.4.546","theme":"cosmo","title":"Neuroglancer","bibliography":["references.bib"]},"extensions":{"book":{"multiFile":true}}}},"projectFormats":["html"]}